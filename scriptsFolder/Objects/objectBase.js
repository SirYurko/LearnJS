// Синтаксис об'єктів
// let user = new Object(); // синтаксис "конструктора об’єктів"
// let user = {};  // синтаксис "літералу об’єкта"

// let user = {     // об’єкт
//     name: "Іван",  // за ключем "name" зберігаємо значення "Іван"
//     age: 30        // за ключем "age" зберігати значення "30"
//   };


// Для звернення до властивостей використовується запис через крапку:

// // отримаємо значення властивостей об’єкта:
// alert( user.name ); // Іван
// alert( user.age ); // 30

// let user = {
//     name: "Oleksii",
//     age: 22,
//     admin: true,
//     "likes birds": true,  // Ім’я властивості з декількох слів повинно бути в лапках

// }

// console.log(user) // виводимо об'єкт в консоль
// delete user.admin // видаляємо властивість admin в об'єкті User
// console.log(user) // виводить об'єкт без властивості admin

// user["Любить птахів 1"] = true;  //якщо ім'я властивості містить більше двох слів, 
// // звертання до властивості відбувається не через крапку, а через квардратні дужки

// console.log(user)

// //-----------------

// let key = "любить птахів 2";

// // так само, як user["любить птахів"] = true;
// user[key] = true;

// console.log(user)

//------------------------------

// Тут змінна key може бути обчислена під час виконання або залежатиме від вводу користувача.
// І тоді ми використовуємо його для доступу до властивості. Це дає нам велику гнучкість.

// let user = {
//     name: "Іван",
//     age: 30
//   };
  
//   let key = prompt("Що ви хочете знати про користувача?", "name");
  
  // доступ до властивості через змінну
//   alert( user[key] ); // Іван (якщо ввести "name")


//   Запис «через крапку» такого не дозволяє:

//   let user = {
//     name: "Іван",
//     age: 30
//   };
  
//   let key = "name";
//   alert( user.key ) // undefined
//-----------------------------------


let fruit = prompt("Які фрукти купити?", "apple");

let bag = {
    [fruit]: 5,
};

alert( bag.apple );